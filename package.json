{
  "name": "emacs-functions",
  "displayName": "emacs-functions",
  "description": "Emacs basic functions",
  "version": "0.0.8",
  "publisher": "rrudi",
  "engines": {
    "vscode": "^1.8.0"
  },
  "categories": [
    "Keymaps"
  ],
  "keywords": [
    "emacs"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/src/extension",
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "devDependencies": {
    "typescript": "^2.0.10",
    "vscode": "^1.0.0",
    "mocha": "^2.3.3",
    "sinon": "^1.17.6",
    "@types/node": "^6.0.40",
    "@types/mocha": "^2.2.32"
  },
  "homepage": "https://github.com/shirou/emacs-functions/blob/master/README.md",
  "bugs": "https://github.com/shirou/emacs-functions/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/shirou/emacs-functions.git"
  },
  "preview": true,
  "contributes": {
    "commands": [
      {
        "command": "extension.emacs.set-mark-command",
        "title": "set mark"
      },
      {
        "command": "extension.emacs.cancelSelection",
        "title": "clear mark"
      },
      {
        "command": "extension.emacs.cursorUp",
        "title": "overwrite build-in cursorUp"
      },
      {
        "command": "extension.emacs.cursorDown",
        "title": "overwrite build-in cursorDown"
      },
      {
        "command": "extension.emacs.cursorRight",
        "title": "overwrite build-in cursorRight"
      },
      {
        "command": "extension.emacs.cursorLeft",
        "title": "overwrite build-in cursorLeft"
      },
      {
        "command": "extension.emacs.cursorHome",
        "title": "overwrite build-in cursorHome"
      },
      {
        "command": "extension.emacs.cursorEnd",
        "title": "overwrite build-in cursorEnd"
      },
      {
        "command": "extension.emacs.cursorWordLeft",
        "title": "overwrite build-in cursorWordLeft"
      },
      {
        "command": "extension.emacs.cursorWordRight",
        "title": "overwrite build-in cursorWordRight"
      },
      {
        "command": "extension.emacs.cursorPageDown",
        "title": "overwrite build-in cursorPageDown"
      },
      {
        "command": "extension.emacs.cursorPageUp",
        "title": "overwrite build-in cursorPageUp"
      },
      {
        "command": "extension.emacs.scrollPageDown",
        "title": "overwrite build-in scrollPageDown"
      },
      {
        "command": "extension.emacs.scrollPageUp",
        "title": "overwrite build-in scrollPageUp"
      },
      {
        "command": "extension.emacs.scrollLineDown",
        "title": "overwrite build-in scrollLineDown"
      },
      {
        "command": "extension.emacs.scrollLineUp",
        "title": "overwrite build-in scrollLineUp"
      },
      {
        "command": "extension.emacs.cursorTop",
        "title": "overwrite build-in cursorTop"
      },
      {
        "command": "extension.emacs.cursorBottom",
        "title": "overwrite build-in cursorBottom"
      },
      {
        "command": "extension.emacs.yank",
        "title": "yank"
      },
      {
        "command": "extension.emacs.kill-region",
        "title": "kill-region"
      },
      {
        "command": "extension.emacs.kill-ring-save",
        "title": "kill-ring-save"
      },
      {
        "command": "extension.emacs.kill-line",
        "title": "kill-line"
      },
      {
        "command": "extension.emacs.recenter",
        "title": "recenter-top-bottom"
      }
    ],
    "keybindings": [
      {
        "command": "extension.emacs.set-mark-command",
        "key": "ctrl+space",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+f",
        "command": "extension.emacs.cursorRight",
        "when": "editorTextFocus"
      },
      {
        "key": "right",
        "command": "extension.emacs.cursorRight",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+b",
        "command": "extension.emacs.cursorLeft",
        "when": "editorTextFocus"
      },
      {
        "key": "left",
        "command": "extension.emacs.cursorLeft",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+n",
        "command": "extension.emacs.cursorDown",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
      },
      {
        "key": "down",
        "command": "extension.emacs.cursorDown",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+p",
        "command": "extension.emacs.cursorUp",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
      },
      {
        "key": "up",
        "command": "extension.emacs.cursorUp",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+a",
        "command": "extension.emacs.cursorHome",
        "when": "editorTextFocus"
      },
      {
        "key": "home",
        "command": "extension.emacs.cursorHome",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+e",
        "command": "extension.emacs.cursorEnd",
        "when": "editorTextFocus"
      },
      {
        "key": "end",
        "command": "extension.emacs.cursorEnd",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+[ f",
        "command": "extension.emacs.cursorWordRight",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+right",
        "command": "extension.emacs.cursorWordRight",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+[ b",
        "command": "extension.emacs.cursorWordLeft",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+left",
        "command": "extension.emacs.cursorWordLeft",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+[ shift+,",
        "command": "extension.emacs.cursorTop",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+[ shift+.",
        "command": "extension.emacs.cursorBottom",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+left",
        "command": "extension.emacs.cursorWordLeft",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+v",
        "command": "extension.emacs.cursorPageDown",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+[ v",
        "command": "extension.emacs.cursorPageUp",
        "when": "editorTextFocus"
      },
      {
        "key": "backspace",
        "command": "deleteLeft",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "delete",
        "command": "deleteRight",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+/",
        "command": "undo",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+x u",
        "command": "undo",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+-",
        "command": "undo",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+space",
        "command": "extension.emacs.set-mark-command",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+x ctrl+f",
        "command": "workbench.action.files.openFileFolder",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+x ctrl+k",
        "command": "workbench.action.closeActiveEditor",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+y",
        "command": "extension.emacs.yank",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+w",
        "command": "extension.emacs.kill-region",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+[ w",
        "command": "extension.emacs.kill-ring-save",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l",
        "command": "extension.emacs.recenter",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+k",
        "command": "extension.emacs.kill-line"
      },
      {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+x ctrl+w",
        "command": "workbench.action.files.saveAs",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+h",
        "command": "deleteLeft",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+s",
        "command": "actions.find",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+s",
        "command": "editor.action.nextMatchFindAction",
        "when": "findWidgetVisible"
      },
      {
        "key": "ctrl+r",
        "command": "actions.find",
        "when": "!findWidgetVisible"
      },
      {
        "key": "ctrl+r",
        "command": "editor.action.previousMatchFindAction",
        "when": "findWidgetVisible"
      },
      {
        "key": "ctrl+j",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+x 0",
        "command": "workbench.action.closeActiveEditor"
      },
      {
        "key": "ctrl+x 0",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen"
      },
      {
        "key": "ctrl+x 1",
        "command": "workbench.action.closeOtherEditors"
      },
      {
        "key": "ctrl+x k",
        "command": "workbench.action.closeActiveEditor"
      },
      {
        "key": "ctrl+x k",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen"
      },
      {
        "key": "ctrl+x b",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "ctrl+x 2",
        "command": "workbench.action.splitEditor"
      },
      {
        "key": "ctrl+x 2",
        "command": "workbench.action.splitEditor"
      },
      {
        "key": "ctrl+alt+\\",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+[ m",
        "command": "extension.emacs.back-to-indentation",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+g",
        "command": "editor.action.clearoutput"
      },
      {
        "key": "ctrl+g",
        "command": "extension.emacs.cancelSelection",
        "when": "editorHasSelection && editorTextFocus"
      },
      {
        "key": "ctrl+g",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
      },
      {
        "key": "ctrl+g",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && editorTextFocus"
      },
      {
        "key": "ctrl+g",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
      },
      {
        "key": "ctrl+g",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && editorFocus"
      },
      {
        "key": "ctrl+g",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
      },
      {
        "key": "ctrl+g",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
      },
      {
        "key": "ctrl+g",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
      },
      {
        "key": "ctrl+g",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible"
      },
      {
        "key": "ctrl+g",
        "command": "closeQuickFixWidget",
        "when": "editorFocus && quickFixWidgetVisible"
      },
      {
        "key": "ctrl+g",
        "command": "hideSuggestWidget",
        "when": "editorTextFocus && suggestWidgetVisible"
      },
      {
        "key": "ctrl+g",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
      },
      {
        "key": "ctrl+g",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.closeMessages",
        "when": "globalMessageVisible"
      }
    ]
  },
  "dependencies": {
    "copy-paste": "^1.3.0"
  }
}
